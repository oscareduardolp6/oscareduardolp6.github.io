<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Patterns on Oscar L√≥pez</title><link>https://oscarlp6.dev/en/tags/patterns/</link><description>Recent content in Patterns on Oscar L√≥pez</description><generator>Hugo</generator><language>en</language><lastBuildDate>Sat, 01 Jun 2024 00:00:00 +0000</lastBuildDate><atom:link href="https://oscarlp6.dev/en/tags/patterns/index.xml" rel="self" type="application/rss+xml"/><item><title>üïí Task vs Promise: Chaining</title><link>https://oscarlp6.dev/en/blogs/task-vs-promises/</link><pubDate>Sat, 01 Jun 2024 00:00:00 +0000</pubDate><guid>https://oscarlp6.dev/en/blogs/task-vs-promises/</guid><description>The first language in which I learned to work asynchronously was JavaScript. Initially, it was very challenging because it was a completely different way of thinking from what I had learned in university. Once I internalized the principles of asynchronous programming, it became much easier. So, when I started working in C#, I immediately noticed the similarities between Task and Promise since they are practically equivalent.
But when trying to chain promises the same way as in JavaScript, I encountered a peculiarity.</description></item><item><title>üõ†Ô∏è Branded Types</title><link>https://oscarlp6.dev/en/blogs/branded-types/</link><pubDate>Sun, 21 Apr 2024 00:00:00 +0000</pubDate><guid>https://oscarlp6.dev/en/blogs/branded-types/</guid><description>As a developer, exploring and understanding Branded Types in TypeScript has been a revelation to me. Before delving into this topic, let me share a brief personal experience on how I have evolved in my perception of working under pressure, something that in many ways reflects my approach to complex concepts like Branded Types.
I remember when taking pride in working under pressure was almost a badge of honor on my resume.</description></item></channel></rss>