<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Patterns on Oscar L√≥pez</title><link>https://oscarlp6.dev/tags/patterns/</link><description>Recent content in Patterns on Oscar L√≥pez</description><generator>Hugo</generator><language>es</language><lastBuildDate>Sat, 01 Jun 2024 00:00:00 +0000</lastBuildDate><atom:link href="https://oscarlp6.dev/tags/patterns/index.xml" rel="self" type="application/rss+xml"/><item><title>üïí Task vs Promise: Encadenaci√≥n</title><link>https://oscarlp6.dev/blogs/task-vs-promises/</link><pubDate>Sat, 01 Jun 2024 00:00:00 +0000</pubDate><guid>https://oscarlp6.dev/blogs/task-vs-promises/</guid><description>El primer lenguaje en el que aprend√≠ a trabajar de forma as√≠ncrona fue JavaScript. Al principio, me cost√≥ mucho trabajo porque era una forma de pensar completamente distinta a la que aprend√≠ en la universidad. Una vez que logr√© interiorizar los principios de la programaci√≥n as√≠ncrona, me fue mucho m√°s sencillo. Entonces, cuando comenc√© a trabajar en C#, de inmediato detect√© las similitudes entre las Task y las Promise, pues son pr√°cticamente equivalentes.</description></item><item><title>üõ†Ô∏è Branded Types</title><link>https://oscarlp6.dev/blogs/branded-types/</link><pubDate>Sun, 21 Apr 2024 00:00:00 +0000</pubDate><guid>https://oscarlp6.dev/blogs/branded-types/</guid><description>Como desarrollador, explorar y comprender los Branded Types en TypeScript ha sido una revelaci√≥n para m√≠. Antes de sumergirnos en este tema, perm√≠teme compartir una breve experiencia personal sobre c√≥mo he evolucionado en mi percepci√≥n del trabajo bajo presi√≥n, algo que en muchos sentidos refleja mi acercamiento a conceptos complejos como los Branded Types.
Recuerdo cuando enorgullecerme de trabajar bajo presi√≥n era casi un distintivo de honor en mi curr√≠culum. El cumplir con fechas l√≠mite ajustadas y enfrentar proyectos complejos parec√≠a un logro admirable.</description></item></channel></rss>